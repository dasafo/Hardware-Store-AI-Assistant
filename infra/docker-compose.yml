# Docker Compose file for the Hardware Store AI Assistant application.

services:
  # PostgreSQL database service
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - ../backend/.env
    volumes:
      - db_data:/var/lib/postgresql/data
      - ../data/initdb:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    env_file:
      - ../backend/.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PGADMIN_PORT:-5050}:80"

  # Qdrant vector database service
  qdrant:
    image: qdrant/qdrant:v1.9.3
    container_name: hsai-qdrant
    restart: unless-stopped
    env_file:
      - ../backend/.env
    ports:
      - "${QDRANT_PORT:-6333}:6333" # REST + gRPC
    volumes:
      - qdrant_data:/qdrant/storage

  # Redis service for caching
  redis:
    image: redis:7-alpine
    container_name: hsai-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6380}:6379"

  # Backend FastAPI application service
  backend:
    build:
      context: ../backend
    container_name: hsai-backend
    restart: unless-stopped
    env_file:
      - ../backend/.env
    ports:
      - "${FASTAPI_PORT:-8000}:8000"
    volumes:
      - ../backend:/app
    depends_on:
      db:
        condition: service_healthy
      qdrant:
        condition: service_started

  # ngrok service for exposing n8n webhooks
  ngrok:
    image: ngrok/ngrok:latest
    container_name: hsai-ngrok
    restart: unless-stopped
    command: 
      - "start"
      - "--all"
    volumes:
      - ./config/ngrok.yml:/etc/ngrok.yml
    ports:
      - "4041:4040" # ngrok web UI
    depends_on:
      - n8n

  # n8n workflow automation service
  n8n:
    image: n8nio/n8n:latest
    container_name: hsai-n8n
    restart: unless-stopped
    user: "node"
    env_file:
      - ../backend/.env
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=Europe/Madrid
      - NODE_ENV=development
    volumes:
      - ./data/n8n:/home/node/.n8n
    depends_on:
      - backend

# Named volumes for data persistence
volumes:
  db_data:
  qdrant_data:
  n8n_data:
