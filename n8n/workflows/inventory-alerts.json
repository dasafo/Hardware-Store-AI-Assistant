{
  "name": "Inventory Alerts Workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 6
            }
          ]
        }
      },
      "id": "schedule-check",
      "name": "Schedule Inventory Check",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://backend:8000/products",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "get-all-products",
      "name": "Get All Products",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Filter products with low stock\nconst products = $json;\nconst lowStockThreshold = 10;\nconst outOfStockThreshold = 0;\n\nconst lowStockProducts = [];\nconst outOfStockProducts = [];\n\nproducts.forEach(product => {\n  if (product.stock_quantity <= outOfStockThreshold) {\n    outOfStockProducts.push(product);\n  } else if (product.stock_quantity <= lowStockThreshold) {\n    lowStockProducts.push(product);\n  }\n});\n\nreturn {\n  json: {\n    low_stock: lowStockProducts,\n    out_of_stock: outOfStockProducts,\n    total_products: products.length,\n    check_timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "filter-low-stock",
      "name": "Filter Low Stock",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.low_stock.length + $json.out_of_stock.length}}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "check-alerts",
      "name": "Check if Alerts Needed",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Generate alert message\nconst data = $json;\nlet alertMessage = '🚨 *ALERTA DE INVENTARIO* 🚨\\n\\n';\n\nif (data.out_of_stock.length > 0) {\n  alertMessage += `❌ *PRODUCTOS AGOTADOS (${data.out_of_stock.length}):*\\n`;\n  data.out_of_stock.forEach(product => {\n    alertMessage += `• ${product.name} (SKU: ${product.sku})\\n`;\n  });\n  alertMessage += '\\n';\n}\n\nif (data.low_stock.length > 0) {\n  alertMessage += `⚠️ *STOCK BAJO (${data.low_stock.length}):*\\n`;\n  data.low_stock.forEach(product => {\n    alertMessage += `• ${product.name} - Stock: ${product.stock_quantity} (SKU: ${product.sku})\\n`;\n  });\n  alertMessage += '\\n';\n}\n\nalertMessage += `📊 *Resumen:*\\n`;\nalertMessage += `• Total productos revisados: ${data.total_products}\\n`;\nalertMessage += `• Productos agotados: ${data.out_of_stock.length}\\n`;\nalertMessage += `• Productos con stock bajo: ${data.low_stock.length}\\n`;\nalertMessage += `• Fecha de revisión: ${new Date(data.check_timestamp).toLocaleString('es-MX')}\\n`;\n\nreturn {\n  json: {\n    alert_message: alertMessage,\n    alert_type: 'inventory',\n    severity: data.out_of_stock.length > 0 ? 'high' : 'medium',\n    timestamp: data.check_timestamp\n  }\n};"
      },
      "id": "generate-alert",
      "name": "Generate Alert Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1120,
        200
      ]
    },
    {
      "parameters": {
        "url": "http://backend:8000/api/notifications/inventory",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-API-Key",
              "value": "super-secret-admin"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{$json.alert_message}}"
            },
            {
              "name": "type",
              "value": "={{$json.alert_type}}"
            },
            {
              "name": "severity",
              "value": "={{$json.severity}}"
            }
          ]
        },
        "options": {}
      },
      "id": "send-notification",
      "name": "Send Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1340,
        200
      ]
    },
    {
      "parameters": {},
      "id": "no-alerts",
      "name": "No Alerts Needed",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1120,
        400
      ]
    }
  ],
  "connections": {
    "Schedule Inventory Check": {
      "main": [
        [
          {
            "node": "Get All Products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Products": {
      "main": [
        [
          {
            "node": "Filter Low Stock",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Low Stock": {
      "main": [
        [
          {
            "node": "Check if Alerts Needed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Alerts Needed": {
      "main": [
        [
          {
            "node": "Generate Alert Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Alerts Needed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Alert Message": {
      "main": [
        [
          {
            "node": "Send Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "1",
  "id": "inventory-alerts",
  "meta": {
    "instanceId": "hsai-n8n"
  },
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "4",
      "name": "inventory"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "1",
      "name": "hardware-store"
    }
  ]
}